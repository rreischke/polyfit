### Input for ratio_fit 

## All information about the data from the experiment.
[data_structure]

# Provides the path to the data file which should contain two columns
# with the independent variable in the first and the dependent variable in
# the second column (no commas etc, see example file)
#
# file_data = ./path/to/file_with_data
#
file_data = ./data/scott_2018.txt
#file_data = ./data/van_herk_97.txt
# Contains the covariances of the data. It can be either a file path to the
# respective covariance e.g.
#
# X_covariance = ./path/to/file_with covariance
# 
# The file must contain an NxN matrix if N data points
# were given (see example files).
#
# Alternatively there is also the possibility to specify a constant absolute 
# or relative error:
#
# X_covariance = abs 0.1
# X_covariance = rel 0.1
#
# and likewise for Y_covariance and XY_covariance covariance. If you want no
# errors on the independent variable or the cross covariance you can just write
#
# X_covariance = None
#
# Note, that you always need to specify Y_covariance since the fitting is 
# ill-defined otherwise.
#

X_covariance = rel 0.05
Y_covariance = rel 0.05
XY_covariance = rel 0.0
#X_covariance = ./data/X_covariance.txt
#Y_covariance = ./data/Y_covariance.txt
#XY_covariance = ./data/XY_covariance.txt


## Parameters important for the inference process
[inference]

# Definition of the prior range. We assume flat priors for the analysis. 
# The posterior is there zero if it is outside the prior range. Therefore this
# is the allowed parameter region of your model. For reactivity ratios a lower
# bound of zero should be assumend. The upper limit can be set to a large value
# if needed. Be generous with the upper bound.
# 
# prior_range = minimum_first_parameter, maximum_first_parameter, minimum_second_parameter, maximum_second_parameter

prior_range = 0.015, 100000, 0, 100000


## Plotting parameters
[plotting]

# Line colour of the lines of all the plots produced, can be any colour
# which has a keyword in matplotlib. Alternatively one can also provide 
# the hex-value of the color.
# plot_line_colour = blue
plot_line_colour = #00689D

# Colour of all the points of all plots produced, can be any colour 
# which has a keyword in matplotlib. Alternatively one can also provide 
# the hex-value of the color.
# plot_data_colour = red
plot_data_colour = red

# All the labels for the plots: name of independent and dependent variable
# and the name of the parameters. Note that the $$ are required for
# latex style. If you don't have tex, just write the label you want.
use_tex = False
independent_variable_name = $f_2$
dependent_variable_name = $F_2$
parameter_1_name = $r_1$
parameter_2_name = $r_2$

# Zooming factor for the contour plot, in case the contours appear to small.
# contour_plot_zoom = 1.3
contour_plot_zoom = 1.0


## Where to save the files.
[output]
# Contour plot, bestfit plot with data and 1d marginal distributions.
file_name_contour_plot = ./output/contour_scott.pdf
file_name_best_fit_plot = ./output/bestfit_scott.pdf
file_name_1d_marginal_p1_plot = ./output/1dmarginal_p1.pdf
file_name_1d_marginal_p2_plot = ./output/1dmarginal_p2.pdf
file_name_results = ./output/results_scott.txt

# If you want to do plots yourself, we write also the best fit curve and
# the 2d posterior into files.
file_name_contour = ./output/posterior_scott.txt
file_name_best_fit = ./output/bestfit_model_scott.txt

## Some precision parameters
[precision]

# Number of points which is used for the interpolation of the posterior 
# distribution. Fiducial value is 200 which should be fine, increase this
# if the results are not smooth or accurate enough.  
# Caveat: if you double this number, the computation is four times as high.
#
N_inter = 200

#
#
#
